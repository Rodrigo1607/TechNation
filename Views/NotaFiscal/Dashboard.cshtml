@model TechNation.ViewModel.DashboardViewModel

<div>
    <h3>Indicadores</h3>
    <table class="table">
        <tr>
            <td>Valor total das notas emitidas:</td>
            <td>R$ @Model.TotalNotasEmitidas</td>
        </tr>
        <tr>
            <td>Valor total das notas emitidas, mas sem ter a cobrança feita:</td>
            <td>R$ @Model.TotalSemCobranca</td>
        </tr>
        <tr>
            <td>Valor total das notas vencidas - Inadimplência:</td>
            <td>R$ @Model.TotalVencidas</td>
        </tr>
        <tr>
            <td>Valor total das notas a vencer:</td>
            <td>R$ @Model.TotalAReceber</td>
        </tr>
        <tr>
            <td>Valor total das notas pagas:</td>
            <td>R$ @Model.TotalPagas</td>
        </tr>
    </table>
</div>

<div>
    <h3>Gráfico de Evolução da Inadimplência Mês a Mês</h3>
    <canvas id="chartInadimplencia" width="400" height="200"></canvas>
</div>

<div>
    <h3>Gráfico de Evolução da Receita Recebida Mês a Mês</h3>
    <canvas id="chartReceita" width="400" height="200"></canvas>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Dados para o gráfico de Inadimplência
        var inadimplenciaData = @Html.Raw(Json.Serialize(Model.InadimplenciaMesAMes));

        var ctxInadimplencia = document.getElementById('chartInadimplencia').getContext('2d');
        var chartInadimplencia = new Chart(ctxInadimplencia, {
            type: 'bar',
            data: {
                labels: inadimplenciaData.map(d => {
                    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
                    return months[d.mes - 1];
                }),
                datasets: [{
                    label: 'Valor da Inadimplência',
                    data: inadimplenciaData.map(d => d.total),
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        ticks: {
                            stepSize: 1,
                            maxRotation: 0,
                            autoSkip: true,
                            maxTicksLimit: 12,
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 100,
                            max: 1000
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Evolução da Inadimplência Mês a Mês'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return 'R$ ' + tooltipItem.raw.toFixed(2);
                            }
                        }
                    }
                }
            }
        });

        // Dados para o gráfico de Receita
        var receitaData = @Html.Raw(Json.Serialize(Model.ReceitaMesAMes));

        // Preparação dos dados para o gráfico de barras da Receita
        var labelsReceita = receitaData.map(d => d.mes);
        var valoresReceita = receitaData.map(d => d.total);

        // Somar os valores da receita mês a mês
        var valoresAcumulados = [];
        var acumulado = 0;
        for (var i = 0; i < valoresReceita.length; i++) {
            acumulado += valoresReceita[i];
            valoresAcumulados.push(acumulado);
        }

        var ctxReceita = document.getElementById('chartReceita').getContext('2d');
        var chartReceita = new Chart(ctxReceita, {
            type: 'bar',
            data: {
                labels: labelsReceita.map(mes => {
                    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
                    return months[mes - 1];
                }),
                datasets: [{
                    label: 'Valor da Receita Acumulada',
                    data: valoresAcumulados,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    x: {
                        ticks: {
                            stepSize: 1,
                            maxRotation: 0,
                            autoSkip: true,
                            maxTicksLimit: 12,
                        }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 100,
                            max: 1000
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Evolução da Receita Recebida Mês a Mês'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return 'R$ ' + tooltipItem.raw.toFixed(2);
                            }
                        }
                    }
                }
            }
        });
    </script>
}
